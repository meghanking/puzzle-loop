(defun makemap (mapname mapcontents)

	 (set mapname mapcontents)
	 (setq maplist (append maplist (list mapname)))
 )

;;------------------------

(defun makerepresentations (mapname) 

	(setq linerepmap (makelinerepmap (list-length (eval mapname)) (list-length (car (eval mapname)))))
	(setq dotrepmap (makedotrepmap linerepmap))
	(setq tilerepmap (maketilerepmap dotrepmap (eval mapname)))
	(setq linenum 0)
	(setq movelist '())
	(setq statestring "Let the game begin")
	(setq linestring "Let the game begin")
	(setq currentmap (list mapname 'linerepmap 'dotrepmap 'tilerepmap 'movelist 'linenum))
)



;;------------------------

(defun makelinerepmap (rownum colnum)

	(loop for i from 1 to (+ (* rownum 2) 3) collect
		(cond 
			((or (equal 1 i) (equal (+ (* rownum 2) 3) i))
				(make-sequence 'list (+ 1 colnum) :initial-element '(xx)
	)
			)
			((equal (mod i 2) 0)
				(append 
					(list '(xx)) 
					(loop for i from 1 to colnum collect
					(list 'empty))
					(list '(xx))
				)
			)
			(t 
				(loop for i from 0 to colnum collect 
					(list 'empty)
				)
			)
		)
	)
)

;;------------------------

(defun createdot (numberrow numbercol)		
	(list 
		(elt (elt linerepmap (- numberrow 1)) (- numbercol 1))
	
		(elt (elt linerepmap numberrow) numbercol)
	
		(elt (elt linerepmap (+ numberrow 1)) (- numbercol 1))
	
		(elt (elt linerepmap numberrow) (- numbercol 1))
	)
)

;;------------------------

(defun makedotrepmap (linerepmap)

	(remove nil
		(setq listofdots
			(loop for i from 1 to (- (list-length linerepmap) 1) collect
				(cond
						((equal (equal (mod i 2) 0) NIL)	 	
						
						(loop for j from 1 to (+ 1 colnum) collect
							(createdot i j))
						)
				)
			)
		)
	)
)



;;------------------------

(defun maketilerepmap (dotrepmap mapcontents)
 
	(loop for i from 1 to (list-length mapcontents) collect
		(loop for j from 1 to (list-length (car mapcontents)) collect
			(list (elt (elt mapcontents (- i 1)) (- j 1))

			(elt (elt (elt dotrepmap (- i 1)) (- j 1)) 1)

			(elt (elt (elt dotrepmap i) j) 0)
		
			(elt (elt (elt dotrepmap i) j) 3)
		
			(elt (elt (elt dotrepmap (- i 1)) (- j 1)) 2)
			
			)
		)	
	)
 )
