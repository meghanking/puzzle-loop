 q: the instructions say there are ways to do moves, should we allow the user to undo a move? like if they input something incorrectly...
 a: he explicitly says other extra features to be part of the user interface
 
 extra things I may want to add:
 	being able to end the map you are on at any time
  	being able to clear a line... or undo a move.... clear a line.
  	saying that you want an x... nope don't care (i do in back end, but dont print and don't let user do it I guess
  	
 
 Implementation restrictions:
 
 1	Each move will be specified as a triple – two numbers separated by a blank followed by blank and a letter: N N L. 
 	No other punctuation or characters is allowed. 
 	The two numbers will identify the row then column (starting in the upper left corner) where a line will be added and the letter will identify the line’s position on the square (T for top, B for bottom, L for left, and R for right)
 
 2	(e.g., numbering the rows and columns are highly recommended)
 
 3	Each student will turn in a textual copy of their program 
 (not compiled) on this date with a README.TXT plain text file describing 
 how to execute your program. 

 4 	The main routine for your program should be called “slither”

 5	once a solution is found, the game must ask if you want to play another game, repeating the process of gameplay


list of variables to know:
rownum -> number of rows in the current map
colnum -> number of columns in the current map
currentmap -> list containing (mapname linerepmap dotrepmap rownum colnum) of the current map
linecount -> the number of lines drawn on the current map
maplist -> list containing all the maps predefined in the program currently

list of functions to know:
isClosedCircut -> given a lineplacement and the linerepmap, will determine if the line is contained in a closed circuit in this map

makemap -> creates a puzzle-loop map with name given as first parameter and contents given as second parameter
				sets the mapname and adds the maoname to the maplist

makerepresentation -> creates reps for currentmap. sets currentmap with mapname linerepmap dotrepmap rownum and colnum. setting all those variables as well







;; scratch making dot rep... make linerep and derive dots each time you do it I think will be better. 
;; number of linerows is linerownum
;; number of columns in even number rows is linecoleven 
;; number of columns in odd number rows is linecolodd
;; DO NOT ADD IN THE DESCRPIPTION BECAUSE IT ERRORED OUT and it was annoying...